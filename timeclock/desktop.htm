<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Sleek Desktop</title>
    <style>
        html, body {
            margin: 0;
            padding: 0;
            overflow: hidden; /* Prevent scrolling */
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
        }

        #desktop {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            flex-wrap: wrap;
            align-content: flex-start;
            padding: 20px;
        }

        .icon {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin: 10px;
            cursor: pointer;
        }

        .icon img {
            width: 80px;
            height: 80px;
        }

        .icon span {
            margin-top: 5px;
        }

        .window {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 400px;
            height: 250px;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
            cursor: move;
            overflow: hidden;
            resize: both;
            z-index: 1;
        }

        .window-content {
            width: 100%;
            height: 100%;
            border: none;
        }

        .window-title {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            background-color: #333;
            color: #fff;
            border-radius: 10px 10px 0 0;
            cursor: move;
        }

        .window-title h3 {
            margin: 0;
            font-size: 16px;
            font-weight: normal;
        }

        .window-close {
            cursor: pointer;
            color: #fff;
            font-size: 18px;
        }

        .window-body {
            height: calc(100% - 40px);
            overflow: auto;
        }

        .resize-handle {
            position: absolute;
            bottom: 0;
            right: 0;
            width: 16px;
            height: 16px;
            background-color: #333;
            cursor: nwse-resize;
        }
    </style>
</head>
<body>
    <div id="desktop">
        <div class="icon" onclick="openWindow('content1.html')">
            <img src="icon1.png" alt="Icon 1">
            <span>Icon 1</span>
        </div>
        <div class="icon" onclick="openWindow('content2.html')">
            <img src="icon2.png" alt="Icon 2">
            <span>Icon 2</span>
        </div>
        <div class="icon" onclick="openWindow('content3.html')">
            <img src="icon3.png" alt="Icon 3">
            <span>Icon 3</span>
        </div>
    </div>

    <script>
      // Store the active windows
var windows = [];

// Create a new window
function openWindow(src) {
  var windowElement = document.createElement('div');
  windowElement.className = 'window';

  var windowTitle = document.createElement('div');
  windowTitle.className = 'window-title';

  var titleText = document.createElement('h3');
  titleText.textContent = 'New Window';

  var closeButton = document.createElement('span');
  closeButton.className = 'window-close';
  closeButton.innerHTML = '&times;';

  var windowBody = document.createElement('div');
  windowBody.className = 'window-body';

  var windowContent = document.createElement('iframe');
  windowContent.className = 'window-content';
  windowContent.src = src;

  windowTitle.appendChild(titleText);
  windowTitle.appendChild(closeButton);
  windowBody.appendChild(windowContent);
  windowElement.appendChild(windowTitle);
  windowElement.appendChild(windowBody);

  var resizeHandle = document.createElement('div');
  resizeHandle.className = 'window-resize-handle';
  windowElement.appendChild(resizeHandle);

  document.body.appendChild(windowElement);

  // Add the window to the active windows
  windows.push(windowElement);

  // Attach event listeners for dragging and resizing
  windowElement.addEventListener('mousedown', startDragging);
  windowElement.addEventListener('touchstart', startDragging);

  windowElement.addEventListener('mouseup', stopDragging);
  windowElement.addEventListener('touchend', stopDragging);

  resizeHandle.addEventListener('mousedown', startResizing);
  resizeHandle.addEventListener('touchstart', startResizing);

  windowElement.addEventListener('mousemove', dragWindow);
  windowElement.addEventListener('touchmove', dragWindow);

  closeButton.addEventListener('click', function () {
    closeWindow(windowElement);
  });
}

// Close the window
function closeWindow(windowElement) {
  // Remove the window from the active windows
  windows = windows.filter(function (win) {
    return win !== windowElement;
  });
  // Remove the window from the DOM
  windowElement.remove();
}

// Variables for dragging and resizing
var draggingWindow = null;
var resizingWindow = null;
var initialX;
var initialY;
var initialWidth;
var initialHeight;

// Start dragging the window
function startDragging(e) {
  draggingWindow = this;
  initialX = e.clientX - this.offsetLeft;
  initialY = e.clientY - this.offsetTop;
  this.style.zIndex = 9999;
}

// Stop dragging the window
function stopDragging() {
  draggingWindow = null;
  this.style.zIndex = '';
}

// Start resizing the window
function startResizing(e) {
  resizingWindow = this.parentElement;
  initialX = e.clientX;
  initialY = e.clientY;
  initialWidth = resizingWindow.offsetWidth;
  initialHeight = resizingWindow.offsetHeight;
  document.addEventListener('mousemove', resizeWindow);
  document.addEventListener('mouseup', stopResizing);
}

// Resize the window
function resizeWindow(e) {
  if (resizingWindow !== null) {
    var newWidth = initialWidth + e.clientX - initialX;
    var newHeight = initialHeight + e.clientY - initialY;
    resizingWindow.style.width = newWidth + 'px';
    resizingWindow.style.height = newHeight + 'px';
  }
}

// Drag the window
function dragWindow(e) {
  if (draggingWindow !== null) {
    var newX = e.clientX - initialX;
    var newY = e.clientY - initialY;
    draggingWindow.style.left = newX + 'px';
    draggingWindow.style.top = newY + 'px';
  }
}

// Get the client X coordinate from the event
function getClientX(e) {
  if (e.type === 'touchmove' || e.type === 'touchstart') {
    return e.touches[0].clientX;
  }
  return e.clientX;
}

// Get the client Y coordinate from the event
function getClientY(e) {
  if (e.type === 'touchmove' || e.type === 'touchstart') {
    return e.touches[0].clientY;
  }
  return e.clientY;
}

    </script>
</body>
</html>
